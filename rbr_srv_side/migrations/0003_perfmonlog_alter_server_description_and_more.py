# Generated by Django 4.0 on 2021-12-28 22:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rbr_srv_side', '0002_server_server_is_active'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerfMonLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
            ],
            options={
                'verbose_name': 'Performance Monitor',
                'db_table': 'perf_mon_log',
            },
        ),
        migrations.AlterField(
            model_name='server',
            name='description',
            field=models.TextField(default='no_description', max_length=255, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='server',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Name'),
        ),
        migrations.CreateModel(
            name='NetworkInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface', models.CharField(max_length=50, verbose_name='Interface')),
                ('status', models.BooleanField(verbose_name='Status')),
                ('mtu', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20000)], verbose_name='MTU')),
                ('perf_mon_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbr_srv_side.perfmonlog')),
            ],
            options={
                'verbose_name': 'Network information',
                'db_table': 'network_information',
            },
        ),
        migrations.CreateModel(
            name='MemoryInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Memory total')),
                ('used', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Memory in use')),
                ('percent', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Memory percent')),
                ('perf_mon_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbr_srv_side.perfmonlog')),
            ],
            options={
                'verbose_name': 'Memory information',
                'db_table': 'memory_information',
            },
        ),
        migrations.CreateModel(
            name='LoadAverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('one_minute', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='1 min.')),
                ('five_minutes', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='5 min.')),
                ('fifteen_minutes', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='15 min.')),
                ('perf_mon_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbr_srv_side.perfmonlog')),
            ],
            options={
                'verbose_name': 'Load average',
                'db_table': 'load_average',
            },
        ),
        migrations.CreateModel(
            name='HostInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sys_name', models.CharField(max_length=50, verbose_name='System name')),
                ('host_name', models.CharField(max_length=50, verbose_name='Host name')),
                ('perf_mon_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbr_srv_side.perfmonlog')),
            ],
            options={
                'verbose_name': 'Host information',
                'db_table': 'host_information',
            },
        ),
        migrations.CreateModel(
            name='DiskInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_name', models.CharField(max_length=50, verbose_name='Disk name')),
                ('mount_point', models.CharField(max_length=255, verbose_name='Mount point')),
                ('file_system_type', models.CharField(max_length=10, verbose_name='File system type')),
                ('total', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total space')),
                ('used', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Used space')),
                ('perf_mon_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbr_srv_side.perfmonlog')),
            ],
            options={
                'verbose_name': 'Disk information',
                'db_table': 'disk_information',
            },
        ),
        migrations.CreateModel(
            name='CPUInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_cores', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Cores number')),
                ('cpu_physical_cores', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Physical cores')),
                ('cpu_frequency_current', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)], verbose_name='CPU Frequency current')),
                ('cpu_frequency_minimum', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)], verbose_name='CPU Frequency minimum')),
                ('cpu_frequency_maximum', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)], verbose_name='CPU Frequency maximum')),
                ('perf_mon_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbr_srv_side.perfmonlog')),
            ],
            options={
                'verbose_name': 'CPU information',
                'db_table': 'cpu_information',
            },
        ),
    ]
